<%= semantic_form_for [:admin, @part_number], :html => {:multipart => true} do |f| %>

  <%= f.inputs :name => :part_number_component_category_sel, 
      :for => [:component_category, f.object.component_category || f.object.build_component_category],
      :disabled => f.object.persisted? do |c| %>
    <%= render :partial => "admin/component_categories/sel_ancestor_new_form", 
               :locals => {:f => c, :top_collection => ComponentCategory.valid_depth0_collection,
                           :form_class => "cc_selection cc_ancestor_node" } %>
    <%= f.input :component_category_id, :as => :select,
                :collection => c.object.level2.blank?? [] : 
                               ComponentCategory.find(c.object.level2).children,
                :input_html => {:class => "cc_selection cc_leaf_node"},
                :prompt => I18n.t('helpers.select.category_sel_tip_prompt') %>
  <% end %>

  <%= f.inputs :name => "hidden areas", :style => "display:none;" do %>
    <%= f.input :cc_code, :as => :string %>
    <%= f.input :code, :as => :string%>
  <% end %>

  <%= f.inputs :part_number_supplier_sel do %>  
    <%= f.input :supplier_id, :as => :select, :include_blank => false,
                :collection => f.object.supplier_select_collection %>
    <%= f.input :vendor_code, :as => :string %>    
    <%= f.input :latest_price, :as => :string %>
    <%= f.input :min_amount, :as => :number %>
  <% end %>

  <%= f.inputs :part_number_complementary_info do %>
    <%= f.input :reserved_code, :as => :string, 
                :input_html => {:value => f.object.reserved_code||'0000',
                                :disabled => f.object.model_fixed?} %> 
    <%= f.input :description, :as => :string %>
    <li>
      <%= f.label :appendix %>
      <% if f.object.appendix? %>
        <%= f.object.appendix_name %> &nbsp&nbsp
        <%= f.check_box :remove_appendix %> Remove &nbsp&nbsp
      <% end %> 
      <%= f.file_field :appendix %>
    </li>  
  <% end %>

  <%= f.inputs :part_number_basic_info do %>
    <%= f.input :status, :as => :select, :collection => f.object.status_select_collection.map{|r| [i18n_status_helper(r),r]}, :include_blank => false %>
    <%= f.input :prepared_by, :input_html => {:value => f.object.prepared_by || current_admin_user.email, 
                                              :disabled => f.object.display_approved_by?} %>
    <% if f.object.display_approved_by? %>
      <%= f.input :approved_by, :input_html => {:value => f.object.approved_by || current_admin_user.email,
                                                :disabled => f.object.model_fixed?} %>
    <% end %>                                       
  <% end %>

  <% if (f.object.change_histories.empty? || f.object.change_histories.last.persisted?)  %>
    <% f.object.change_histories.build(:updated_by => current_admin_user.email) %>
  <% end %>
  <%= f.inputs :notes, :updated_by, :name => :part_number_change_history, :for =>[:change_histories, f.object.change_histories.last] %> 

  <%= f.actions do %>
    <%= f.action :submit, :button_html => {:class => "part_number_submit_button"} %>
    <li class="cancel"> <%=link_to t("active_admin.cancel"), {:action => :index} %></li>
  <% end %>

<% end %> 